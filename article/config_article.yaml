#=================================================================================================
#
# config file to build a clean dataset of species songs from xeno-canto audio recordings
#
# authors : FÃ©lix Michaud and Sylvain Haupert
#
#=================================================================================================

RANDOM_SEED: 1979         # Fixed random seed

################################
# XENO-CANTO PARAMETERS
################################
PARAMS_XC:
  NUM_FILES: 20            # Number of file to extract for each species
  PARAM_XC_LIST:          # Xeno-canto parameters
  - len:30-60
  - q:">C"
  #- type:song
  #CSV_XC_FILE: 'dataset_xc_embcit.csv' # The file will contain all the metadata collected from Xeno-canto
 
################################
# ROIS EXTRACTION PARAMETERS
################################
PARAMS_EXTRACT:
  # function
  FUNC: !fun bambird.extract_rois_core  # select the function used to extract the rois {bambird.extract_rois_core, bambird.extract_rois_full_sig}
  # Extract Audio resampling
  SAMPLE_RATE: 44100      # Sampling frequency in Hz
  # Audio preprocess
  LOW_FREQ: 100           # Low frequency in Hz of the bandpass filter applied to the audio
  HIGH_FREQ: 18000        # High frequency in Hz of the bandpass filter applied to the audio
  BUTTER_ORDER: 15        # butterworth filter order to select the bandwidth corresponding to the ROI
  AUDIO_DURATION: 20      # Max duration of the audio file (in seconds)
  SIGNAL_LENGTH: 20       # Split the audio signal in chunks of duration = SIGNAL_LENGTH (in seconds)
  OVLP: 0                 # Define the overlap ratio between each chunk (0=> no overlap, 0.75=> 75% of overlap between 2 consecutive chunks)
  # Spectrogram
  MODE_RMBCKG: mean       # Mode to compute the remove_background {'mean', 'median'}
  NFFT: 2048              # Number of points used for the SFFT to compute the spectrogram
  N_RUNNING_MEAN: 25      # Number of points used to compute the running mean of the noise profil
  # hysteretic thresholding parameters
  FACTOR_T: 10            # reduction factor of the spectrogram in time
  FACTOR_F: 15            # reduction factor of the spectrogram in frequency
  MASK_PARAM1: 37 
  MASK_PARAM2: 33  
  # Select and merge bbox parameters
  MIN_DURATION: 0.36       # minimum event duration in s
  MARGIN_T_LEFT: 0.24      # overlapping time margin in s on the left side of the ROI to merge
  MARGIN_T_RIGHT: 0.24     # overlapping time margin in s on the right side of the ROI to merge
  MARGIN_F_BOTTOM: 170     # overlapping frequency margin in Hz on the bottom of the ROI to merge
  MARGIN_F_TOP: 170        # overlapping frequency margin in Hz on the top of the ROI to merge
  # Save ROIs parameters
  MARGIN_T: 0              # time margin in s around the ROI
  MARGIN_F: 0              # frequency margin in Hz around the ROI
  FILTER_ORDER: 15         # butterworth filter order to select the bandwidth corresponding to the ROI
  
################################
# FEATURES EXTRACTION PARAMETERS
################################
PARAMS_FEATURES:
  # Extract Audio resampling
  SAMPLE_RATE: 24000      # Sampling frequency in Hz
  # Audio preprocess
  LOW_FREQ: 250           # Low frequency in Hz of the bandpass filter applied to the audio
  HIGH_FREQ: 11000        # High frequency in Hz of the bandpass filter applied to the audio
  BUTTER_ORDER: 1         # butterworth filter order to select the bandwidth corresponding to the ROI
  # Spectrogram
  NFFT: 512              # Number of points of the spectrogram
  SHAPE_RES: 'med'        # Resolution of the shapes {low, med, high}

################################
# CLUSTERING PARAMETERS
################################
PARAMS_CLUSTER:
  SCALER: MINMAXSCALER   # scaler method to prepare the features before the clustering {STANDARDSCALER, ROBUSTSCALER, MINMAXSCALER}
  PERCENTAGE_PTS: 10     # minimum number of ROIs to form a cluster (in % of the total number of ROIs)
  METHOD: DBSCAN         # cluster method that allow some points being outside of a cluster {HDBSCAN, DBSCAN}
  KEEP: BIGGEST          # define if we want to keep all the clusters or only the biggest cluster, while the rest is discarded as noise {BIGGEST, ALL}



